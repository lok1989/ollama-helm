@Bean
public FlatFileItemReader<ExtendedTransaction> extendedTransactionReader() {
    FlatFileItemReader<ExtendedTransaction> reader = new FlatFileItemReader<>();
    reader.setResource(new ClassPathResource("input.csv"));
    reader.setLinesToSkip(1);

    DefaultLineMapper<ExtendedTransaction> lineMapper = new DefaultLineMapper<>();

    DelimitedLineTokenizer tokenizer = new DelimitedLineTokenizer();
    tokenizer.setNames(
        "requestId", "cusip", "finalCustMnc", "gpName", "gfcId", "gpNum", 
        "finalFirmMnc", "transType", "businessDate", "finalMaturity", 
        "endDate", "settleDate", "utiuid"
    );

    lineMapper.setLineTokenizer(tokenizer);
    lineMapper.setFieldSetMapper(new ExtendedTransactionFieldSetMapper());

    reader.setLineMapper(lineMapper);
    return reader;
}




import org.springframework.batch.item.file.mapping.FieldSetMapper;
import org.springframework.batch.item.file.transform.FieldSet;
import org.springframework.validation.BindException;

import java.text.SimpleDateFormat;
import java.util.Date;

public class ExtendedTransactionFieldSetMapper implements FieldSetMapper<ExtendedTransaction> {

    private static final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

    @Override
    public ExtendedTransaction mapFieldSet(FieldSet fieldSet) throws BindException {
        ExtendedTransaction tx = new ExtendedTransaction();

        tx.setRequestId(fieldSet.readInt("requestId"));
        tx.setCusip(fieldSet.readString("cusip"));
        tx.setFinalCustMnc(fieldSet.readString("finalCustMnc"));
        tx.setGpName(fieldSet.readString("gpName"));
        tx.setGfcId(fieldSet.readString("gfcId"));
        tx.setGpNum(fieldSet.readString("gpNum"));
        tx.setFinalFirmMnc(fieldSet.readString("finalFirmMnc"));
        tx.setTransType(fieldSet.readString("transType"));

        tx.setBusinessDate(parseDate(fieldSet.readString("businessDate")));
        tx.setFinalMaturity(parseDate(fieldSet.readString("finalMaturity")));
        tx.setEndDate(parseDate(fieldSet.readString("endDate")));
        tx.setSettleDate(parseDate(fieldSet.readString("settleDate")));

        tx.setUtiuid(fieldSet.readString("utiuid"));

        return tx;
    }

    private Date parseDate(String dateStr) {
        try {
            return dateFormat.parse(dateStr);
        } catch (Exception e) {
            return null; // or handle error
        }
    }
}
